{"version":3,"sources":["components/DigitButton.jsx","components/OperationButton.jsx","components/Calculator/Calculator.jsx","App.js","index.js"],"names":["DigitButton","dispatch","digit","onClick","type","ACTIONS","ADD_DIGIT","payload","OperationButton","operation","CHOOSE_OPERATION","CLEAR","DELETE_DIGIT","EVALUATE","evaluate","state","previous","parseFloat","previousOperant","current","currentOperant","toString","INTEGER_FORMATTER","Intl","NumberFormat","maximumFractionDigits","formatOperand","operand","split","integer","decimal","format","reducer","overwrite","includes","slice","Calculator","useReducer","className","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3f01d3f8.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { ACTIONS } from \"./Calculator/Calculator\";\r\n\r\nexport default function DigitButton({ dispatch, digit }) {\r\n  return (\r\n    <button\r\n      onClick={() => {\r\n        dispatch({ type: ACTIONS.ADD_DIGIT, payload: { digit } });\r\n      }}\r\n    >\r\n      {digit}\r\n    </button>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { ACTIONS } from \"./Calculator/Calculator\";\r\n\r\nexport default function OperationButton({ dispatch, operation }) {\r\n  return (\r\n    <button\r\n      onClick={() => {\r\n        dispatch({\r\n          type: ACTIONS.CHOOSE_OPERATION,\r\n          payload: { operation },\r\n        });\r\n      }}\r\n    >\r\n      {operation}\r\n    </button>\r\n  );\r\n}\r\n","import React, { useReducer } from \"react\";\r\nimport DigitButton from \"../DigitButton\";\r\nimport OperationButton from \"../OperationButton\";\r\nimport \"./Calculator.css\";\r\n\r\nexport const ACTIONS = {\r\n  ADD_DIGIT: \"add-digit\",\r\n  CLEAR: \"clear\",\r\n  DELETE_DIGIT: \"delete-digit\",\r\n  CHOOSE_OPERATION: \"choose-operation\",\r\n  EVALUATE: \"evaluate\",\r\n};\r\nconst evaluate = (state) => {\r\n  const previous = parseFloat(state.previousOperant);\r\n  const current = parseFloat(state.currentOperant);\r\n  if (state.operation === \"+\") {\r\n    return (previous + current).toString();\r\n  } else if (state.operation === \"-\") {\r\n    return (previous - current).toString();\r\n  } else if (state.operation === \"x\") {\r\n    return (previous * current).toString();\r\n  } else if (state.operation === \"รท\") {\r\n    return (previous / current).toString();\r\n  }\r\n};\r\nconst INTEGER_FORMATTER = new Intl.NumberFormat(\"en-us\", {\r\n  maximumFractionDigits: 0,\r\n});\r\nfunction formatOperand(operand) {\r\n  if (operand == null) {\r\n    return;\r\n  }\r\n  const [integer, decimal] = operand.split(\".\");\r\n  if (decimal == null) {\r\n    return INTEGER_FORMATTER.format(integer);\r\n  }\r\n  return `${INTEGER_FORMATTER.format(integer)}.${decimal}`;\r\n}\r\nfunction reducer(state, { type, payload }) {\r\n  if (type === ACTIONS.ADD_DIGIT) {\r\n    if (state.overwrite) {\r\n      return {\r\n        ...state,\r\n        overwrite: false,\r\n        currentOperant: payload.digit,\r\n      };\r\n    }\r\n    if (payload.digit === \"0\" && state.currentOperant === \"0\") {\r\n      return state;\r\n    }\r\n    if (payload.digit === \".\") {\r\n      if (!state.currentOperant) {\r\n        return {\r\n          ...state,\r\n          currentOperant: \"0.\",\r\n        };\r\n      }\r\n      if (state.currentOperant.includes(\".\")) {\r\n        return state;\r\n      }\r\n    }\r\n    return {\r\n      ...state,\r\n      currentOperant: `${state.currentOperant || \"\"}${payload.digit}`,\r\n    };\r\n  } else if (type === ACTIONS.CLEAR) {\r\n    return {};\r\n  } else if (type === ACTIONS.DELETE_DIGIT) {\r\n    if (state.overwrite) {\r\n      return {\r\n        ...state,\r\n        overwrite: false,\r\n        currentOperant: null,\r\n      };\r\n    }\r\n    if (state.currentOperant) {\r\n      return {\r\n        ...state,\r\n        currentOperant: state.currentOperant.slice(0, -1),\r\n      };\r\n    }\r\n    return state;\r\n  } else if (type === ACTIONS.CHOOSE_OPERATION) {\r\n    if (!state.previousOperant) {\r\n      if (!state.currentOperant) {\r\n        return state;\r\n      }\r\n      return {\r\n        operation: payload.operation,\r\n        previousOperant: parseFloat(state.currentOperant),\r\n        currentOperant: null,\r\n      };\r\n    } else if (!state.currentOperant) {\r\n      return {\r\n        ...state,\r\n        operation: payload.operation,\r\n      };\r\n    }\r\n    return {\r\n      operation: payload.operation,\r\n      previousOperant: parseFloat(evaluate(state)),\r\n      currentOperant: null,\r\n    };\r\n  } else if (type === ACTIONS.EVALUATE) {\r\n    if (state.operation && state.currentOperant) {\r\n      return {\r\n        ...state,\r\n        overwrite: true,\r\n        operation: null,\r\n        previousOperant: null,\r\n        currentOperant: evaluate(state),\r\n      };\r\n    }\r\n  }\r\n  return state;\r\n}\r\n\r\nexport default function Calculator() {\r\n  const [{ currentOperant, previousOperant, operation }, dispatch] = useReducer(\r\n    reducer,\r\n    {}\r\n  );\r\n  return (\r\n    <div className=\"calculator\">\r\n      <div className=\"top-display\">\r\n        <p className=\"previous-display\">\r\n          {previousOperant ? formatOperand(previousOperant.toString()) : null}{\" \"}\r\n          {operation}\r\n        </p>\r\n        <p className=\"current-display\">{formatOperand(currentOperant)}</p>\r\n      </div>\r\n      <div className=\"buttons\">\r\n        <button\r\n          className=\"span-2\"\r\n          onClick={() => {\r\n            dispatch({ type: ACTIONS.CLEAR });\r\n          }}\r\n        >\r\n          AC\r\n        </button>\r\n        <button\r\n          onClick={() => {\r\n            dispatch({ type: ACTIONS.DELETE_DIGIT });\r\n          }}\r\n        >\r\n          DEL\r\n        </button>\r\n        <OperationButton operation=\"รท\" dispatch={dispatch} />\r\n        <DigitButton digit=\"1\" dispatch={dispatch} />\r\n        <DigitButton digit=\"2\" dispatch={dispatch} />\r\n        <DigitButton digit=\"3\" dispatch={dispatch} />\r\n        <OperationButton operation=\"x\" dispatch={dispatch} />\r\n        <DigitButton digit=\"4\" dispatch={dispatch} />\r\n        <DigitButton digit=\"5\" dispatch={dispatch} />\r\n        <DigitButton digit=\"6\" dispatch={dispatch} />\r\n        <OperationButton operation=\"+\" dispatch={dispatch} />\r\n        <DigitButton digit=\"7\" dispatch={dispatch} />\r\n        <DigitButton digit=\"8\" dispatch={dispatch} />\r\n        <DigitButton digit=\"9\" dispatch={dispatch} />\r\n        <OperationButton operation=\"-\" dispatch={dispatch} />\r\n        <DigitButton digit=\".\" dispatch={dispatch} />\r\n        <DigitButton digit=\"0\" dispatch={dispatch} />\r\n        <button\r\n          className=\"span-2\"\r\n          onClick={() => {\r\n            dispatch({ type: ACTIONS.EVALUATE });\r\n          }}\r\n        >\r\n          =\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import Calculator from \"./components/Calculator/Calculator\";\n\nfunction App() {\n  return <Calculator />;\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}